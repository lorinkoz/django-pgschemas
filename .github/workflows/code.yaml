name: code
on:
  pull_request:
  push:
    branches:
      - master
    paths:
      - pyproject.toml
      - poetry.lock
      - "**.py"
jobs:
  django-tests:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
        django-version: ["~=2.0.0", "~=2.1.0", "~=2.2.0", "~=3.0.0", "~=3.1.0"]
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: dpgs_sandbox
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v1
        with:
          path: ~/.cache/pypoetry
          key: py${{ matrix.python-version }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            py-poetry-
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          python -m poetry install
      - name: Install Django specific version ${{ matrix.django-version }}
        run: |
          python -m poetry run pip install "Django${{ matrix.django-version }}"
      - name: Run Tests
        run: |
          python -m poetry run coverage run dpgs_sandbox/manage.py test tests
      - name: Upload coverage to Coveralls
        if: matrix.python-version == '3.6' && matrix.django-version == '~=2.0.0'
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
        run: |
          python -m pip install coverage[toml] coveralls
          python -m coveralls
