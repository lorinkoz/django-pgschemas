name: code
on:
    push:
        branches: [master]
    pull_request:
        branches: [master]
jobs:
    django-tests:
        runs-on: ubuntu-latest
        strategy:
            max-parallel: 4
            matrix:
                python-version: [3.6, 3.7, 3.8]
                django-version: ["~=2.0", "~=3.0"]
        services:
            postgres:
                image: postgres:10.8
                env:
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: postgres
                    POSTGRES_DB: dpgs_sandbox
                ports:
                    - 5432:5432
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        steps:
            - uses: actions/checkout@v2
            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v1
              with:
                  python-version: ${{ matrix.python-version }}
            - uses: actions/cache@v1
              with:
                  path: ~/.cache/pypoetry
                  key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-poetry-
            - name: Install Dependencies
              run: |
                  python -m pip install --upgrade pip
                  python -m pip install poetry
                  python -m poetry install
            - name: Install Django specific version ${{ matrix.django-version }}
              run: |
                  python -m poetry run pip install "Django${{ matrix.django-version }}"
            - name: Run Tests
              run: |
                  python -m poetry run coverage run dpgs_sandbox/manage.py test tests
            - name: Upload coverage to Codecov
              uses: codecov/codecov-action@v1
              if: matrix.python-version == '3.7' && matrix.django-version == '~=3.0'
              with:
                  file: ./.coverage
    build-n-publish:
        runs-on: ubuntu-latest
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
        steps:
            - uses: actions/checkout@v2
            - name: Set up Python 3.7
              uses: actions/setup-python@v1
              with:
                  python-version: 3.7
            - name: Install Dependencies
              run: |
                  python -m pip install --upgrade pip
                  python -m pip install poetry
                  python -m poetry install
            - name: Build Package
              run: |
                  python -m poetry build
            - name: Publish distribution to PyPI
              uses: pypa/gh-action-pypi-publish@master
              with:
                  user: __token__
                  password: ${{ secrets.PYPI_TOKEN }}
