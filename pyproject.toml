[tool.poetry]
name = "django-pgschemas"
version = "0.11.0"
description = "Multi-tenancy on Django using PostgreSQL schemas."
license = "MIT"
authors = ["Lorenzo Pe√±a <lorinkoz@gmail.com>"]
readme = "README.rst"
repository = "https://github.com/lorinkoz/django-pgschemas"
documentation = "https://django-pgschemas.readthedocs.io/"
keywords = ["django", "tenants", "schemas", "multi-tenancy", "postgresql"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: Django",
    "Framework :: Django :: 3.1",
    "Framework :: Django :: 3.2",
    "Framework :: Django :: 4.0",
    "Framework :: Django :: 4.1",
]

[tool.poetry.dependencies]
python = "^3.8"
django = ">=3.1,<4.2"
psycopg2 = "^2.9.3"

[tool.poetry.dev-dependencies]
black = "^22.1.0"
channels = "^2.1"
coverage = {extras = ["toml"], version = "^6.3"}
doc8 = "^0.8.0"
flake8 = "^3.8.4"
flake8-bugbear = "^20.11.1"
flake8-comprehensions = "^3.3.1"
flake8-no-types = "^1.1.1"
flake8-tidy-imports = "^4.2.1"
isort = "^5.6.4"
sphinx = "^1.8"
sphinx_rtd_theme = "^0.4.2"
sphinx-django-command = "^0.1.3"

[tool.black]
line-length = 120

[tool.isort]
atomic = true
combine_as_imports = true
line_length = 120
profile = "black"

[tool.coverage.run]
source = ["django_pgschemas"]
omit = ["django_pgschemas/contrib/channels*"]

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
