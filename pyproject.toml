[tool.poetry]
name = "django-pgschemas"
version = "0.16.0"
description = "Multi-tenancy on Django using PostgreSQL schemas."
license = "MIT"
authors = ["Lorenzo Pe√±a <lorinkoz@gmail.com>"]
readme = "README.rst"
repository = "https://github.com/lorinkoz/django-pgschemas"
documentation = "https://django-pgschemas.readthedocs.io/"
keywords = ["django", "tenants", "schemas", "multi-tenancy", "postgresql"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: Django",
    "Framework :: Django :: 5.0",
    "Framework :: Django :: 5.1",
]

[tool.poetry.dependencies]
python = ">=3.10"
django = "^5.0"

[tool.poetry.dev-dependencies]
black = "*"
channels = "*"
coverage = { extras = ["toml"], version = "*" }
doc8 = "*"
ruff = "*"
sphinx = "*"
sphinx_rtd_theme = "*"
sphinx-django-command = "*"

[tool.black]
line-length = 100

[tool.ruff]
select = ["I", "E", "F"]
line-length = 120

[tool.ruff.isort]
combine-as-imports = true
known-first-party = ["django_pgschemas"]

[tool.mypy]
strict_optional = true
disallow_untyped_defs = true
check_untyped_defs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = ["channels.*", "psycopg.*", "psycopg2.*"]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "docs.*",
    "django_pgschemas.contrib.*",
    "django_pgschemas.postgresql_backend.*",
    "dpgs_sandbox.*",
]
ignore_errors = true

[tool.coverage.run]
source = ["django_pgschemas"]
omit = ["django_pgschemas/contrib/channels*"]

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
